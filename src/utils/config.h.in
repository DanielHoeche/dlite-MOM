/* -*- Mode: C -*- */

#ifndef _UTILS_CONFIG_H
#define _UTILS_CONFIG_H

/* Language/preprocessor features */
#cmakedefine HAVE___VA_ARGS__
#cmakedefine HAVE_EXT__VA_ARGS__   /* __VA_ARGS__ swallows comma (MSVS) */
#cmakedefine HAVE_EXT2__VA_ARGS__  /* ##__VA_ARGS__ swallows comma (gcc) */
#cmakedefine HAVE___VA_OPT__
#cmakedefine HAVE___FUNC__         /* __func__ */
#cmakedefine HAVE___FUNCTION__

/* Whether headers exists */
#cmakedefine HAVE_STDARG_H
#cmakedefine HAVE_STDDEF_H
#cmakedefine HAVE_STDINT_H
#cmakedefine HAVE_STDLIB_H
#cmakedefine HAVE_FLOAT_H
#cmakedefine HAVE_INTTYPES_H
#cmakedefine HAVE_LOCALE_H

/* Whether symbols exists. If not, they are defined in compat.c or compat/ */
#cmakedefine HAVE_STRDUP
#cmakedefine HAVE__STRDUP
#cmakedefine HAVE_STRNDUP
#cmakedefine HAVE__STRNDUP
#cmakedefine HAVE_STRCASECMP
#cmakedefine HAVE__STRICMP
#cmakedefine HAVE_STRNCASECMP
#cmakedefine HAVE__STRNICMP

#cmakedefine HAVE_SETENV
#cmakedefine HAVE_UNSETENV

#cmakedefine HAVE_REALPATH
#cmakedefine HAVE_GetFullPathNameW

#cmakedefine HAVE_GETOPT
#cmakedefine HAVE_GETOPT_LONG

#cmakedefine HAVE_SNPRINTF
#cmakedefine HAVE__SNPRINTF
#cmakedefine HAVE_VSNPRINTF
#cmakedefine HAVE__VSNPRINTF
#cmakedefine HAVE_VASPRINTF
#cmakedefine HAVE__VASPRINTF
#cmakedefine HAVE_ASPRINTF
#cmakedefine HAVE__ASPRINTF
#cmakedefine HAVE_LOCALECONV
#cmakedefine HAVE_VA_COPY
#cmakedefine HAVE___VA_COPY

/* Whether types exists */
#cmakedefine HAVE_LONG_DOUBLE
#cmakedefine HAVE_LONG_LONG_INT
#cmakedefine HAVE_UNSIGNED_LONG_LONG_INT
#cmakedefine HAVE_INTMAX_T
#cmakedefine HAVE_UINTMAX_T
#cmakedefine HAVE_UINTPTR_T
#cmakedefine HAVE_PTRDIFF_T


/* Whether structure members exists */
#cmakedefine HAVE_LCONV_DECIMAL_POINT
#cmakedefine HAVE_LCONV_THOUSANDS_SEP

/* Size of (void *) */
#define SIZEOF_VOID_P @CMAKE_SIZEOF_VOID_P@

/* =================================================== */
/* Compatibility-functions in the compat/ subdirectory */
/* =================================================== */

/* compat/snprintf.c */
#ifndef HAVE_SNPRINTF
# ifdef HAVE__SNPRINTF
#  define snprintf _snprintf
# else
#  ifndef HAVE_SNPRINTF
#   ifdef HAVE_STDLIB_H
#    include <stdlib.h>
#   endif
#   define snprintf rpl_snprintf
int rpl_snprintf(char *, size_t, const char *, ...);
#  endif
# endif
#endif

#ifdef HAVE__ASPRINTF
# define asprintf _asprintf
#else
# ifndef HAVE_ASPRINTF
#  define asprintf rpl_asprintf
int rpl_asprintf(char **, const char *, ...);
# endif
#endif


#ifdef HAVE_STDARG_H
#include <stdarg.h>

#ifndef HAVE_VSNPRINTF
# define vsnprintf rpl_vsnprintf
int rpl_vsnprintf(char *, size_t, const char *, va_list);
#endif

#ifndef HAVE_VASPRINTF
# define vasprintf rpl_vasprintf
int rpl_vasprintf(char **, const char *, va_list);
#endif

#endif  /* HAVE_STDARG_H */



/* ================================== */
/* Other stuff...                     */
/* ================================== */

#if defined WIN32 || defined _WIN32 || defined __WIN32__
# ifndef WINDOWS
#  define WINDOWS
# endif
#endif


#ifdef WINDOWS
/* Get rid of warnings from MSVS about insecure standard library functions */
# define _CRT_SECURE_NO_WARNINGS

/* Get rid of warnings about possible loss of data in conversions
   between integers or floats of different size */
# pragma warning(disable: 4267 4244)

 /* do not warn about that fully confirming standard library functions are
    depricated */
# pragma warning(disable: 4996)

#endif

/* Allow overriding default dynamic shared library prefix and extension  */
#cmakedefine DSL_PREFIX @DSL_PREFIX@
#cmakedefine DSL_EXT    @DSL_EXT@

/* Thread local storage */
#cmakedefine HAVE_GCC_THREAD_LOCAL_STORAGE
#cmakedefine HAVE_WIN32_THREAD_LOCAL_STORAGE

#if defined(HAVE_GCC_THREAD_LOCAL_STORAGE)
# define _thread_local __thread
#elif defined(HAVE_WIN32_THREAD_LOCAL_STORAGE)
# define _thread_local __declspec(thread)
#else
# define _thread_local
#endif

/* Remove __attribute__ when we are not compiling with gcc */
#ifndef __GNUC__
# define __attribute__(x)
#endif

#endif /* _UTILS_CONFIG_H */
