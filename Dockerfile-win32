# escape=`

# Use the latest Windows Server Core image with .NET Framework 4.8.
FROM mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-ltsc2019

# Set up policies so that we are allowed to install things in the container via powershell.
SHELL ["powershell.exe", "-ExecutionPolicy", "Unrestricted", "-Command"]

# Install Chocolatey, a package manager for Windows.
# The ENV statement seems to be a required environment variable for chocolatey at the moment
# to work around some issues. It may be that this ENV statement can be removed in the future.
ENV chocolateyUseWindowsCompression false
RUN iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1')); choco feature disable --name showDownloadProgress

# Install the VS C++ Build Tools, VS 14 2015
RUN choco install -y vcbuildtools --installargs "/Full"

# Install CMake
RUN choco install cmake -y --installargs 'ADD_CMAKE_TO_PATH=System'

RUN cmake --version

# # Install build tools 16.4.5
# ADD https://download.visualstudio.microsoft.com/download/pr/378e5eb4-c1d7-4c05-8f5f-55678a94e7f4/b9619acc0f9a1dfbdc1b67fddf9972e169916ceae237cf95f286c9e5547f804f/vs_BuildTools.exe C:\TEMP\vs_buildtools.exe

# # Install Build Tools with the Microsoft.VisualStudio.Workload.AzureBuildTools workload, excluding workloads and components with known issues.
# RUN C:\TEMP\vs_buildtools.exe --quiet --wait --norestart --nocache `
#     --installPath C:\BuildTools `
#     --add Microsoft.VisualStudio.Workload.AzureBuildTools `
#     --remove Microsoft.VisualStudio.Component.Windows10SDK.10240 `
#     --remove Microsoft.VisualStudio.Component.Windows10SDK.10586 `
#     --remove Microsoft.VisualStudio.Component.Windows10SDK.14393 `
#     --remove Microsoft.VisualStudio.Component.Windows81SDK `
#  || IF "%ERRORLEVEL%"=="3010" EXIT 0

# RUN "dir"

# Define the entry point for the docker container.
# This entry point starts the developer command prompt and launches the PowerShell shell.
ENTRYPOINT ["C:\\BuildTools\\Common7\\Tools\\VsDevCmd.bat", "&&", "powershell.exe", "-NoLogo", "-ExecutionPolicy", "Bypass"]
